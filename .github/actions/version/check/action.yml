name: version-check
description: Checks the current version present in package.json and returns useful metadata information
inputs:
  app-path:
    description: The path to the app directory
    required: false
    default: app
outputs:
  version:
    description: "The current version string"
    value: ${{ steps.get-version.outputs.version }}
  main-version:
    description: "The current version string on the main branch - might be empty if main branch is not available"
    value: ${{ steps.get-main-version.outputs.version }}
  nightly:
    description: "'true' if this is a nightly release"
    value: ${{ steps.get-metadata.outputs.nightly }}
  beta:
    description: "'true' if this is a beta release"
    value: ${{ steps.get-metadata.outputs.beta }}
  production:
    description: "'true' if this is a production release"
    value: ${{ steps.get-metadata.outputs.production }}

runs:
  using: composite
  steps:
    - id: fetch-all
      shell: bash
      run: git fetch origin main
    - id: get-version
      shell: bash
      run: |
        VERSION=$(cat ${{inputs.app-path}}/package.json | jq -r .version)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Detected version $VERSION"
    - id: get-main-version
      continue-on-error: true
      shell: bash
      run: |
        VERSION=$(git show origin/main:${{inputs.app-path}}/package.json | jq -r .version)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Detected main version $VERSION"
    - id: get-metadata
      shell: bash
      run: |
        NIGHTLY=$(([[ ${{ steps.get-version.outputs.version }} =~ ^[0-9]+\.[0-9]+\.[0-9]+-nightly\.[0-9]+$ ]] && echo "true") || echo "false")
        echo "nightly=$NIGHTLY" >> $GITHUB_OUTPUT
        echo "Detected nightly release: $NIGHTLY"

        BETA=$(([[ ${{ steps.get-version.outputs.version }} =~ ^[0-9]+\.[0-9]+\.[0-9]+-beta\.[0-9]+$ ]] && echo "true") || echo "false")
        echo "beta=$BETA" >> $GITHUB_OUTPUT
        echo "Detected beta release: $BETA"

        PRODUCTION=$(([[ ${{ steps.get-version.outputs.version }} =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]] && echo "true") || echo "false")
        echo "production=$PRODUCTION" >> $GITHUB_OUTPUT
        echo "Detected production release: $PRODUCTION"
    