name: Build
# This reusable workflow will build the application. All build assets will be packaged and uploaded

on:
  workflow_call:
    inputs:
      fullBuild:
        description: 'Specifies if all assets should be build, or only the app and docker container'
        # If false the following assets will be built:
        #  - docker-artifacts (Docker RootFS + Dockerfile)
        #  - app-artifacts (NPM Upload)
        # If true the following additional assets will be built:
        #  - gh-wiki-artifacts (Documentation for GH Wiki)
        #  - gh-pages (Documentation and webpage for GH Pages)
        #  - changelog (File containing changelog description)
        default: false
        required: false
        type: boolean

permissions: {}

jobs:
  build-app:
    name: Build App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: 'app/.node-version'
          cache: 'npm'
          cache-dependency-path: app/
      - name: Build app artifacts
        run: |
          npm ci
          npm run build
          cp ../README.md ../CHANGELOG.md ../LICENSE ../VERSION ./
        working-directory: app/
      - name: Upload app artifacts
        uses: actions/upload-artifact@v3
        with:
          name: app-artifacts
          path: |
            ./app/.node-version
            ./app/README.md
            ./app/CHANGELOG.md
            ./app/LICENSE
            ./app/package.json
            ./app/package-lock.json
            ./app/bin/

  build-docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build-app
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Download app artifacts
        uses: actions/download-artifact@v3
        with:
          name: app-artifacts
          path: ./docker/rootfs/opt/icloud-photos-sync
      - name: Build docker rootfs
        run: |
          # Packaging assets
          tar -C ./rootfs -czf ./rootfs.tar.gz ./
          # For packaging purposes
          cp ./.docker-username ../
        working-directory: docker/
      - name: Build docker image
        uses: docker/build-push-action@v4
        with:
          context: ./docker
          #platforms: linux/amd64,linux/arm64
          tags: ${{ github.event.repository.name }}
          outputs: type=tar,dest=./docker-image.tar
      - name: Package artifacts
        run: |
          cp ./docker/.docker-username ./
          gzip ./docker-image.tar
      - name: Upload docker artifacts
        uses: actions/upload-artifact@v3
        with:
          name: docker-artifacts
          path: |
            ./.docker-username
            ./README.md
            ./CHANGELOG.md
            ./LICENSE
            ./VERSION
            ./docker-image.tar.gz

  build-typedoc:
    name: Build TypeDoc
    runs-on: ubuntu-latest
    if: inputs.fullBuild
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: 'app/.node-version'
          cache: 'npm'
          cache-dependency-path: app/
      - name: Install
        run: npm ci
        working-directory: app/
      - name: Build doc artifacts
        run: npm run doc
        working-directory: app/
      - name: Upload doc artifacts
        uses: actions/upload-artifact@v3
        with:
          name: gh-wiki-artifacts
          path: |
            ./app/doc/

  build-changelog:
    name: Build Changelog
    runs-on: ubuntu-latest
    if: inputs.fullBuild
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build changelog artifacts
        run: |
          START_LINE=$(grep -n -m 1 -E '^##' CHANGELOG.md | grep -Eo '^[0-9]+')
          ((START_LINE++))
          END_LINE=$(grep -n -m 2 -E '^##' CHANGELOG.md | tail -n 1 | grep -Eo '^[0-9]+')
          LENGTH=$(( END_LINE - START_LINE ))
          tail -n +$START_LINE CHANGELOG.md | head -n $LENGTH > CHANGELOG.latest.md
      - name: Upload changelog artifact
        uses: actions/upload-artifact@v3
        with:
          name: changelog
          path: ./CHANGELOG.latest.md

  build-gh-pages:
    name: Build GH Pages
    runs-on: ubuntu-latest
    if: inputs.fullBuild
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip' 
          cache-dependency-path: pages/
      - name: Setup build environment
        run: |
          pip install -r pages/requirements.txt
          cp LICENSE README.md CHANGELOG.md pages/docs/
      - name: Build Pages
        run: mkdocs build
        working-directory: pages/
      - name: Bundle coverage reports
        uses: actions/download-artifact@v3
        with:
          name: coverage-report
          path: ./pages/site/dev/coverage
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./pages/site/